version: '3.8'

services:
  db-primary:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_REPLICATION_USER: replicator
      POSTGRES_REPLICATION_PASSWORD: ${POSTGRES_REPLICATION_PASSWORD}
      PG_HBA_CONF: /etc/postgresql/pg_hba.conf
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - db_primary_data:/var/lib/postgresql/data
      - ./postgresql-primary.conf:/etc/postgresql/postgresql.conf
      - ./pg_hba.conf:/etc/postgresql/pg_hba.conf
      - ./init-replication.sh:/docker-entrypoint-initdb.d/init-replication.sh
    command: postgres -c config_file=/etc/postgresql/postgresql.conf -c hba_file=/etc/postgresql/pg_hba.conf
    networks:
      - db-network

  db-replica-1:
    image: postgres:16
    restart: always
    hostname: db-replica-1
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGUSER: ${POSTGRES_USER}
      POSTGRES_PRIMARY_HOST: db-primary
      POSTGRES_PRIMARY_PORT: 5432
      POSTGRES_REPLICATION_USER: replicator
      POSTGRES_REPLICATION_PASSWORD: ${POSTGRES_REPLICATION_PASSWORD}
    ports:
      - "${POSTGRES_REPLICA_1_PORT:-5433}:5432"
    volumes:
      - db_replica_1_data:/var/lib/postgresql/data
      - ./postgresql-replica.conf:/etc/postgresql/postgresql.conf
      - ./setup-replica.sh:/docker-entrypoint-initdb.d/setup-replica.sh
    command: bash -c "chmod +x /docker-entrypoint-initdb.d/setup-replica.sh && /docker-entrypoint-initdb.d/setup-replica.sh"
    depends_on:
      - db-primary
    networks:
      - db-network

  db-replica-2:
    image: postgres:16
    restart: always
    hostname: db-replica-2
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGUSER: ${POSTGRES_USER}
      POSTGRES_PRIMARY_HOST: db-primary
      POSTGRES_PRIMARY_PORT: 5432
      POSTGRES_REPLICATION_USER: replicator
      POSTGRES_REPLICATION_PASSWORD: ${POSTGRES_REPLICATION_PASSWORD}
    ports:
      - "${POSTGRES_REPLICA_2_PORT:-5434}:5432"
    volumes:
      - db_replica_2_data:/var/lib/postgresql/data
      - ./postgresql-replica.conf:/etc/postgresql/postgresql.conf
      - ./setup-replica.sh:/docker-entrypoint-initdb.d/setup-replica.sh
    command: bash -c "chmod +x /docker-entrypoint-initdb.d/setup-replica.sh && /docker-entrypoint-initdb.d/setup-replica.sh"
    depends_on:
      - db-primary
    networks:
      - db-network

  haproxy:
    image: haproxy:2.8
    restart: always
    ports:
      - "${HAPROXY_PORT:-5000}:5000"
      - "${HAPROXY_READ_PORT:-5001}:5001" 
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
    depends_on:
      - db-primary
      - db-replica-1
      - db-replica-2
    networks:
      - db-network

  backend:
    build: ./backend
    depends_on:
      - haproxy
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@haproxy:5000/${POSTGRES_DB}
      DATABASE_READ_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@haproxy:5001/${POSTGRES_DB}
      NODE_ENV: ${NODE_ENV}
      HOST: ${HOST}
      PORT: ${PORT}
    ports:
      - "${PORT}:3000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - db-network

volumes:
  db_primary_data:
  db_replica_1_data:
  db_replica_2_data:

networks:
  db-network:
    driver: bridge